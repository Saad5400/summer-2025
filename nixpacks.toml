[phases.setup]
nixPkgs = [
    "...",
    "python311Packages.supervisor",
]

[phases.install]
cmds = [
    "php -v && php --ini",
    "composer install --no-dev --prefer-dist --optimize-autoloader --no-interaction",
    "npm ci --no-audit --no-fund --loglevel=error"
]

[phases.build]
cmds = [
    # Cache configs for prod
    "php artisan config:cache",
    "php artisan route:cache",
    "php artisan view:cache",

    # Frontend builds (command will run client + SSR)
    "npm run build",

    # supervisor/nginx assets
    "mkdir -p /etc/supervisor/conf.d/",
    "cp /assets/worker-*.conf /etc/supervisor/conf.d/",
    "cp /assets/supervisord.conf /etc/supervisord.conf",
    "chmod +x /assets/start.sh"
]

[start]
cmd = "/assets/start.sh"

[staticAssets]
"start.sh" = '''
#!/bin/bash
set -e

# --- ensure Laravel writable paths (volume may be empty on first boot)
mkdir -p /app/storage/framework/{cache,sessions,views} \
         /app/storage/logs \
         /app/bootstrap/cache
# optional: if you run as www-data in FPM, give it ownership
chown -R www-data:www-data /app/storage /app/bootstrap/cache || true
# permissive enough for containers
chmod -R ug+rwX /app/storage /app/bootstrap/cache

# Make sure nginx can write logs & pid (your nginx logs go elsewhere, but safe)
mkdir -p /var/log/nginx

# Storage symlink (idempotent)
php artisan storage:link || true

# If a previous build cached views with a missing dir, clear them safely
php artisan view:clear || true

# Run any outstanding migrations
php artisan migrate --force || true

# Optimize app (config, routes, events, views)
php artisan optimize

# Render nginx.conf from the template
node /assets/scripts/prestart.mjs /assets/nginx.template.conf /etc/nginx.conf

# Pre-flight: test nginx config
nginx -t -c /etc/nginx.conf

# Start supervisor (nginx, php-fpm, inertia-ssr/horizon/scheduler)
exec supervisord -c /etc/supervisord.conf -n

'''

"supervisord.conf" = '''
[unix_http_server]
file=/assets/supervisor.sock

[supervisord]
logfile=/var/log/supervisord.log
logfile_maxbytes=50MB
logfile_backups=10
loglevel=info
pidfile=/assets/supervisord.pid
nodaemon=false
silent=false
minfds=1024
minprocs=200

[rpcinterface:supervisor]
supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface

[supervisorctl]
serverurl=unix:///assets/supervisor.sock

[include]
files = /etc/supervisor/conf.d/*.conf
'''

"worker-nginx.conf" = '''
[program:worker-nginx]
command=nginx -c /etc/nginx.conf
autostart=true
autorestart=true
stdout_logfile=/dev/stdout
stderr_logfile=/dev/stderr
stdout_logfile_maxbytes=0
stderr_logfile_maxbytes=0
'''

"worker-phpfpm.conf" = '''
[program:worker-phpfpm]
command=php-fpm -y /assets/php-fpm.conf -F
autostart=true
autorestart=true
stdout_logfile=/var/log/worker-phpfpm.log
stderr_logfile=/var/log/worker-phpfpm.log
'''

"worker-scheduler.conf" = '''
[program:worker-scheduler]
process_name=%(program_name)s
command=bash -c 'exec php /app/artisan schedule:work'
autostart=true
autorestart=true
stopasgroup=true
killasgroup=true
stdout_logfile=/var/log/worker-scheduler.log
stderr_logfile=/var/log/worker-scheduler.log
'''

"php-fpm.conf" = '''
[www]
listen = 127.0.0.1:9000
user = www-data
group = www-data
listen.owner = www-data
listen.group = www-data
pm = dynamic
pm.max_children = 50
pm.min_spare_servers = 4
pm.max_spare_servers = 32
pm.start_servers = 18
clear_env = no

; Useful production tweaks
php_admin_value[memory_limit] = 512M
php_admin_value[max_execution_time] = 60
php_admin_value[max_input_time] = 60
php_admin_value[post_max_size] = 256M
php_admin_value[upload_max_filesize] = 64M

; OPcache
php_admin_value[opcache.enable] = 1
php_admin_value[opcache.validate_timestamps] = 0
php_admin_value[opcache.max_accelerated_files] = 20000
php_admin_value[opcache.memory_consumption] = 128
'''

"nginx.template.conf" = '''
user www-data www-data;
worker_processes 5;
daemon off;

worker_rlimit_nofile 8192;

events {
  worker_connections  4096;
}

http {
    include    $!{nginx}/conf/mime.types;
    index      index.html index.htm index.php;

    default_type application/octet-stream;
    log_format   main '$remote_addr - $remote_user [$time_local]  $status '
        '"$request" $body_bytes_sent "$http_referer" '
        '"$http_user_agent" "$http_x_forwarded_for"';
    access_log /var/log/nginx-access.log;
    error_log /var/log/nginx-error.log;
    sendfile     on;
    tcp_nopush   on;
    server_names_hash_bucket_size 128;

    server {
        listen ${PORT};
        listen [::]:${PORT};
        server_name localhost;

        $if(NIXPACKS_PHP_ROOT_DIR) (
            root ${NIXPACKS_PHP_ROOT_DIR};
        ) else (
            root /app/public;
        )

        add_header X-Content-Type-Options "nosniff";
        client_max_body_size 35M;

        index index.php;
        charset utf-8;

        $if(NIXPACKS_PHP_FALLBACK_PATH) (
            location / {
                try_files $uri $uri/ ${NIXPACKS_PHP_FALLBACK_PATH}?$query_string;
            }
        ) else (
          location / {
                try_files $uri $uri/ /index.php?$query_string;
           }
        )

        location = /favicon.ico { access_log off; log_not_found off; }
        location = /robots.txt  { access_log off; log_not_found off; }

        # Laravel friendly 404
        error_page 404 /index.php;

        location ~ \.php$ {
            fastcgi_pass 127.0.0.1:9000;
            fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
            include $!{nginx}/conf/fastcgi_params;
            include $!{nginx}/conf/fastcgi.conf;

            # Inertia-specific buffer tweak
            fastcgi_buffer_size 8k;
        }

        location ~ /\.(?!well-known).* {
            deny all;
        }
    }
}
'''
